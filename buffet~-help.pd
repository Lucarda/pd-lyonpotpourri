#N canvas 600 60 776 545 12;
#N canvas 0 22 450 300 (subpatch) 0;
#X array dopey 62079 float 2;
#X coords 0 1 62079 -1 100 70 1 0 0;
#X restore 29 300 graph;
#N canvas 600 60 538 388 load-samples 0;
#X obj 36 151 soundfiler;
#X msg 36 83 bang;
#X obj 36 109 openpanel;
#X obj 144 37 loadbang;
#X msg 36 131 read -resize \$1 dopey;
#X obj 117 17 inlet;
#X msg 117 64 read -resize sound/voice.wav dopey;
#X connect 1 0 2 0;
#X connect 2 0 4 0;
#X connect 3 0 6 0;
#X connect 4 0 0 0;
#X connect 5 0 6 0;
#X connect 6 0 0 0;
#X restore 153 289 pd load-samples;
#X obj 156 397 bng 15 100 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 398 376 5 0 0 0 rms_report - -;
#N canvas 0 22 450 300 (subpatch) 0;
#X array soapy 22050 float 2;
#X coords 0 1 22050 -1 100 70 1;
#X restore 29 398 graph;
#N canvas 171 294 544 498 processing 0;
#X obj 44 402 s buffet-msgs;
#X msg 203 208 reverse;
#X msg 171 150 normalize 0.95;
#X msg 173 176 killdc;
#X text 43 34 Destructive Buffer Edits;
#X msg 182 386 autoredraw \$1;
#X obj 182 364 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X text 199 363 turn off if redraw hurts performance;
#X msg 182 345 1;
#X obj 182 329 loadbang;
#X msg 43 67 fadein 100;
#X msg 89 92 fadeout 500;
#X msg 112 121 rotatetozero 300;
#X msg 221 247 erase 300 460;
#X msg 223 285 internal_fadeout 500 800;
#X msg 251 309 internal_fadein 200 500;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 5 0;
#X connect 8 0 6 0;
#X connect 9 0 8 0;
#X connect 10 0 0 0;
#X connect 11 0 0 0;
#X connect 12 0 0 0;
#X connect 13 0 0 0;
#X connect 14 0 0 0;
#X connect 15 0 0 0;
#X coords 0 0 1 1 85 60 0;
#X restore 30 202 pd processing;
#X obj 156 323 r buffet-msgs;
#N canvas 574 418 647 284 copying 0;
#X text 47 19 clear receiver (optional);
#X obj 49 236 s buffet-msgs;
#X msg 151 51 normalize 1;
#X msg 48 39 erase 0 500;
#X msg 49 112 copy_to_buffer soapy 0 500;
#X msg 62 135 copy_to_buffer soapy 500 1000;
#X msg 154 181 copy_to_buffer soapy 300 1200;
#X obj 48 80 lyonpotpourri/buffet~ soapy 100 200;
#X text 239 49 normalize array contents;
#X text 241 113 copy specified time range (ms) to a destination array
;
#X text 150 163 out of range copying requests are truncated;
#X connect 2 0 7 0;
#X connect 3 0 7 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 6 0 1 0;
#X restore 31 175 pd copying;
#X text 175 398 operation completion indicator;
#N canvas 339 361 470 320 analysis 0;
#X obj 65 188 s buffet-msgs;
#X text 67 48 get rms reading from a specified segment of buffer;
#X msg 120 145 pevents 50 0.05;
#X text 116 122 look for percussive events;
#X msg 65 72 rmschunk 200 300;
#X connect 2 0 0 0;
#X connect 4 0 0 0;
#X restore 30 254 pd analysis;
#X obj 277 448 print;
#X msg 153 257 bang;
#N canvas 34 269 705 565 scrambler 0;
#X obj 57 356 s buffet-msgs;
#X msg 57 153 minswap \$1;
#X floatatom 57 123 5 0 0 0 - - -;
#X floatatom 146 123 5 0 0 0 - - -;
#X msg 146 153 maxswap \$1;
#X floatatom 145 223 5 0 0 0 - - -;
#X msg 145 269 overlap \$1;
#X msg 145 194 30;
#X msg 236 269 retroblock;
#X msg 326 269 swap;
#X msg 172 335 specswap 0 1000 250;
#X obj 57 57 t b b b;
#X obj 57 28 loadbang;
#X text 184 223 fade time for tapering swap blocks (20 ms. by default)
;
#X msg 200 499 autoredraw \$1;
#X obj 200 473 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X msg 200 442 1;
#X obj 200 418 loadbang;
#X obj 326 141 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 326 164 metro 250;
#X msg 57 94 100;
#X msg 146 94 200;
#X obj 237 158 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 236 181 metro 500;
#X text 217 472 turn off autoredraw if redraw hurts performance;
#X text 198 96 set minimum and maximum swap times in ms.;
#X text 165 26 Destructive rearrangement of array;
#X text 365 272 swap two pieces of the array;
#X text 177 357 specify which parts of buffer to exchange. arguments
are skip1 \, skip2 and duration. In this example the first 250 ms block
of the buffer is swapped with the 250 ms block beginning 1000 ms into
the array;
#X text 239 247 reverse a piece of the array;
#X connect 1 0 0 0;
#X connect 2 0 1 0;
#X connect 3 0 4 0;
#X connect 4 0 0 0;
#X connect 5 0 6 0;
#X connect 6 0 0 0;
#X connect 7 0 5 0;
#X connect 8 0 0 0;
#X connect 9 0 0 0;
#X connect 10 0 0 0;
#X connect 11 0 20 0;
#X connect 11 1 21 0;
#X connect 11 2 7 0;
#X connect 12 0 11 0;
#X connect 14 0 0 0;
#X connect 15 0 14 0;
#X connect 16 0 15 0;
#X connect 17 0 16 0;
#X connect 18 0 19 0;
#X connect 19 0 9 0;
#X connect 20 0 2 0;
#X connect 21 0 3 0;
#X connect 22 0 23 0;
#X connect 23 0 8 0;
#X restore 30 228 pd scrambler;
#N canvas 0 23 532 325 playback-controls 0;
#X msg 18 31 bang;
#X text 56 31 retrigger;
#X msg 178 141 pause;
#X msg 240 143 resume;
#X msg 299 144 stop;
#X obj 18 238 outlet~;
#X obj 299 218 outlet;
#X msg 334 191 static_increment 1;
#X obj 334 166 loadbang;
#X obj 18 59 lyonpotpourri/click~;
#X obj 18 198 lyonpotpourri/samm~ 40 1;
#X connect 0 0 9 0;
#X connect 2 0 10 0;
#X connect 3 0 10 0;
#X connect 4 0 6 0;
#X connect 7 0 6 0;
#X connect 8 0 7 0;
#X connect 9 0 10 0;
#X connect 10 0 5 0;
#X restore 495 147 pd playback-controls;
#X obj 495 237 lpp-meters;
#X obj 25 14 lpp-icon buffet~;
#X text 126 231 reload original sample after scrambling \, if desired
;
#X text 327 448 list of estimated onsets in array's sample (time in
ms.);
#X text 28 114 [buffet~] provides a variety of irreversible transformations
to the contents of an array \, along with some useful analysis of its
contents.;
#X obj 156 350 lyonpotpourri/buffet~ dopey 100 300;
#X obj 495 191 lyonpotpourri/player~ dopey 1;
#X text 250 45 - Perform operations on the contents of a Pd array;
#X connect 6 0 19 0;
#X connect 11 0 1 0;
#X connect 13 0 20 0;
#X connect 13 0 20 1;
#X connect 13 1 20 0;
#X connect 19 0 2 0;
#X connect 19 1 10 0;
#X connect 19 2 3 0;
#X connect 20 0 14 0;
#X connect 20 0 14 1;
