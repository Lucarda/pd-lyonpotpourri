#N canvas 318 372 626 480 12;
#N canvas 0 22 450 300 (subpatch) 0;
#X array sound1 62079 float 2;
#X coords 0 1 62079 -1 100 70 1;
#X restore 402 311 graph;
#X obj 45 192 chopper~ sound1;
#N canvas 292 428 828 406 load-soundfile 0;
#X obj 185 263 soundfiler;
#X msg 184 189 bang;
#X obj 184 215 openpanel;
#X msg 184 237 read -resize \$1 sound1;
#X obj 95 121 loadbang;
#X msg 95 146 read -resize sound/voice.wav sound1;
#X text 353 235 <- use a fairly long and varied sound here;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 0 0;
#X connect 4 0 5 0;
#X connect 5 0 0 0;
#X restore 221 236 pd load-soundfile;
#X obj 45 169 r chopper.demo.msgs;
#X obj 193 192 chopper~ sound1;
#X obj 193 169 r chopper.demo.msgs;
#X obj 45 229 lpp-meters;
#X obj 40 17 lpp-icon chopper~;
#X text 251 49 - an algorithmic array chopper;
#N canvas 633 279 754 935 basic_controls 0;
#X msg 49 106 force_new;
#X msg 198 132 lockme \$1;
#X obj 198 94 tgl 30 0 empty empty empty 0 -6 0 8 -257985 -1 -1 0 1
;
#X floatatom 200 173 5 0 0 0 - minincr -;
#X floatatom 316 171 5 0 0 0 - maxincr -;
#X floatatom 329 228 5 0 0 0 - minseg -;
#X floatatom 432 228 5 0 0 0 - maxseg -;
#X msg 329 249 set_minseg \$1;
#X msg 432 249 set_maxseg \$1;
#X msg 316 192 set_maxincr \$1;
#X msg 200 194 set_minincr \$1;
#X obj 28 602 hsl 128 15 0.1 0.9999 0 0 minincr minincr-init minincr
-2 -6 0 8 -252672 -1 -1 345 1;
#X obj 28 633 hsl 128 15 1.0001 10 0 0 maxincr maxincr-init maxincr
-2 -6 0 8 -252672 -1 -1 1800 1;
#N canvas 0 23 470 320 init 0;
#X obj 27 150 s minincr-init;
#X msg 27 123 0.5;
#X obj 134 149 s maxincr-init;
#X msg 134 122 2;
#X obj 27 4 loadbang;
#X obj 245 147 s minseg-init;
#X obj 352 146 s maxseg-init;
#X msg 245 120 100;
#X obj 323 91 s fixed-incr-init;
#X msg 323 64 1;
#X msg 352 119 2000;
#X connect 1 0 0 0;
#X connect 3 0 2 0;
#X connect 4 0 3 0;
#X connect 4 0 1 0;
#X connect 4 0 7 0;
#X connect 4 0 10 0;
#X connect 4 0 9 0;
#X connect 7 0 5 0;
#X connect 9 0 8 0;
#X connect 10 0 6 0;
#X restore 275 51 pd init;
#X obj 28 664 hsl 128 15 3 300 0 0 minseg minseg-init minseg -2 -6
0 8 -252672 -1 -1 648 1;
#X obj 28 695 hsl 128 15 20 2000 0 0 maxseg maxseg-init maxseg -2 -6
0 8 -252672 -1 -1 600 1;
#X msg 362 444 fixed_increment \$1;
#X obj 49 8 tgl 30 0 empty empty empty 0 -6 0 8 -257985 -1 -1 0 1;
#X obj 49 53 metro 120000;
#X obj 365 358 hsl 50 10 0.1 5 0 0 empty empty empty -2 -8 0 10 -174016
-1 -1 900 1;
#X floatatom 362 414 5 0 0 0 - - -;
#X obj 433 357 r fixed-incr-init;
#X obj 316 363 t b;
#X msg 316 384 0;
#X obj 49 517 s chopper.demo.msgs;
#X text 25 568 individual parametric controls for new loops;
#X text 408 416 set all loops to the same increment;
#X text 228 101 lock current loop;
#X text 54 87 force a new loop;
#X text 87 17 new loop every 2 minutes;
#X connect 0 0 24 0;
#X connect 1 0 24 0;
#X connect 2 0 1 0;
#X connect 3 0 10 0;
#X connect 4 0 9 0;
#X connect 5 0 7 0;
#X connect 6 0 8 0;
#X connect 7 0 24 0;
#X connect 8 0 24 0;
#X connect 9 0 22 0;
#X connect 9 0 24 0;
#X connect 10 0 22 0;
#X connect 10 0 24 0;
#X connect 16 0 24 0;
#X connect 17 0 18 0;
#X connect 18 0 0 0;
#X connect 19 0 20 0;
#X connect 20 0 16 0;
#X connect 21 0 20 0;
#X connect 22 0 23 0;
#X connect 23 0 20 0;
#X restore 221 262 pd basic_controls;
#N canvas 480 42 490 355 deviations 0;
#X msg 48 244 rdur \$1;
#X floatatom 48 220 5 0 0 0 - rdur -;
#X obj 49 102 hsl 128 15 0 1 0 0 rdur rdur-init rdur -2 -6 0 8 -252672
-1 -1 1300 1;
#X obj 49 134 hsl 128 15 0 1 0 0 rinc rinc-init rinc -2 -6 0 8 -252672
-1 -1 100 1;
#X floatatom 112 220 5 0 0 0 - rinc -;
#X msg 112 244 rinc \$1;
#X floatatom 180 220 5 0 0 0 - jitter -;
#X msg 180 244 jitter \$1;
#X obj 49 166 hsl 128 15 0 1 0 0 jitter jitter-init jitter -2 -6 0
8 -252672 -1 -1 0 1;
#X obj 48 297 s chopper.demo.msgs;
#X text 43 51 Parametric controls to deviate a locked loop;
#X text 189 101 factor to vary loop duration;
#X text 189 130 factor to vary loop increment;
#X text 189 159 factor to vary loop start time;
#X connect 0 0 9 0;
#X connect 1 0 0 0;
#X connect 4 0 5 0;
#X connect 5 0 9 0;
#X connect 6 0 7 0;
#X connect 7 0 9 0;
#X restore 221 314 pd deviations;
#N canvas 0 23 490 340 refinements 0;
#X obj 38 29 tgl 30 0 empty empty empty 0 -6 0 8 -257985 -1 -1 0 1
;
#X msg 38 74 adjust_inverse \$1;
#X msg 95 123 taper \$1;
#X floatatom 95 100 5 0 0 0 - taper-dur -;
#X obj 57 217 hsl 128 15 1 100 0 0 taper-dur taper-dur-init taper-dur
-2 -6 0 8 -252672 -1 -1 0 1;
#X text 78 29 maintains loop duration;
#X text 77 43 under increment change;
#X obj 38 149 s chopper.demo.msgs;
#X text 145 101 fadein and fadeout time for loops (ms);
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 2 0 7 0;
#X connect 3 0 2 0;
#X restore 221 340 pd refinements;
#N canvas 0 23 462 312 system 0;
#X obj 38 29 tgl 30 0 empty empty empty 0 -6 0 8 -257985 -1 -1 0 1
;
#X msg 38 74 mute \$1;
#X msg 111 122 seed 6331;
#X obj 38 155 s chopper.demo.msgs;
#X text 110 105 set random seed (might be helpful for stereo);
#X text 100 76 mute object;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X restore 221 366 pd system;
#N canvas 466 769 748 448 store_loops 0;
#X msg 200 211 show_loop;
#X msg 208 294 set_loop 1000 25000 1.62;
#X obj 39 338 s chopper.demo.msgs;
#X msg 39 51 store_loop 0;
#X msg 79 113 store_loop 1;
#X msg 98 144 recall_loop 1;
#X msg 59 73 recall_loop 0;
#X text 141 53 store loop at location 0;
#X text 168 78 recall that loop;
#X text 181 113 store loop at location 1;
#X text 202 145 recall that loop;
#X text 204 259 use numbers that come from show_loop: [start (in samples)
\, duration (in samples) \, increment];
#X text 274 216 show current loop values;
#X text 42 12 1024 storage locations available;
#X connect 0 0 2 0;
#X connect 1 0 2 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X connect 6 0 2 0;
#X restore 221 288 pd store_loops;
#X text 309 196 arg: name of array holding sound file;
#X text 41 116 This object plays random segments from an array with
optional looping.;
#X connect 1 0 6 0;
#X connect 3 0 1 0;
#X connect 4 0 6 1;
#X connect 5 0 4 0;
