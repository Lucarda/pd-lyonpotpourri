#N canvas 437 579 545 456 12;
#N canvas 0 22 450 300 (subpatch) 0;
#X array sound1 62079 float 2;
#X coords 0 1 62079 -1 100 70 1;
#X restore 205 266 graph;
#N canvas 1642 1031 502 352 messages 0;
#X obj 22 122 s stutter.messages;
#X text 20 15 extrema for echo count;
#X text 23 148 extrema for loop duration;
#N canvas 586 175 450 300 pattern-storage 0;
#X obj 29 46 s stutter.messages;
#X msg 29 13 show_loop;
#X text 118 15 print current loop;
#X text 169 83 setloop (start sample \, sample duration);
#X obj 26 113 s stutter.messages;
#X msg 26 79 set_loop 6951 3000;
#X obj 30 187 s stutter.messages;
#X msg 30 153 store_loop 1;
#X obj 25 249 s stutter.messages;
#X msg 25 215 recall_loop 1;
#X text 128 213 recall loop 1;
#X text 127 154 store current loop in location 1;
#X text 25 277 you can store up to 1024 different loops in locations
0-1023;
#X connect 1 0 0 0;
#X connect 5 0 4 0;
#X connect 7 0 6 0;
#X connect 9 0 8 0;
#X restore 313 149 pd pattern-storage;
#X obj 43 257 s stutter.messages;
#X obj 43 199 unpack f f;
#X msg 43 172 90 40;
#X msg 108 172 1000 200;
#X msg 43 226 max_looptime \$1;
#X msg 172 226 min_looptime \$1;
#X text 176 173 order: max \, min;
#X obj 320 112 s stutter.messages;
#X msg 320 55 lockme \$1;
#X obj 320 27 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#N canvas 564 177 450 300 refinements 0;
#X obj 43 257 s stutter.messages;
#X msg 93 232 taper 5;
#X msg 43 200 taper 50;
#X text 111 199 softer envelope;
#X text 153 235 harder envelope;
#X text 44 183 taper duration in ms.;
#X obj 30 101 s stutter.messages;
#X msg 30 75 randomize_dur \$1;
#X floatatom 30 51 5 0 0 0 - - -;
#X obj 33 26 hsl 128 15 0 0.2 0 0 empty empty empty -2 -8 0 10 -129795
-1 -1 0 1;
#X obj 193 104 s stutter.messages;
#X floatatom 193 54 5 0 0 0 - - -;
#X obj 196 29 hsl 128 15 0 0.2 0 0 empty empty empty -2 -8 0 10 -129795
-1 -1 0 1;
#X msg 193 77 randomize_start \$1;
#X text 25 7 random loop deviations;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 7 0 6 0;
#X connect 8 0 7 0;
#X connect 9 0 8 0;
#X connect 11 0 13 0;
#X connect 12 0 11 0;
#X connect 13 0 10 0;
#X restore 313 179 pd refinements;
#X msg 328 76 new_loop;
#X text 340 29 lock current loop;
#X text 392 76 force new;
#X msg 22 58 minmax_echo 2 4;
#X msg 52 87 minmax_echo 5 20;
#X msg 190 89 minmax_echo 1 2;
#X msg 153 38 min_echo 1;
#X msg 172 61 max_echo 2;
#X connect 5 0 8 0;
#X connect 5 1 9 0;
#X connect 6 0 5 0;
#X connect 7 0 5 0;
#X connect 8 0 4 0;
#X connect 9 0 4 0;
#X connect 12 0 11 0;
#X connect 13 0 12 0;
#X connect 15 0 11 0;
#X connect 18 0 0 0;
#X connect 19 0 0 0;
#X connect 20 0 0 0;
#X connect 21 0 0 0;
#X connect 22 0 0 0;
#X restore 201 396 pd messages;
#X text 198 369 use a fairly long and varied sound here;
#N canvas 9 465 466 316 load-soundfile 0;
#X obj 31 177 soundfiler;
#X msg 30 103 bang;
#X obj 30 129 openpanel;
#X msg 30 151 read -resize \$1 sound1;
#X obj 11 57 loadbang;
#X obj 105 40 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 10 82 read -resize examples/voice.wav sound1;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 0 0;
#X connect 4 0 6 0;
#X connect 5 0 6 0;
#X connect 6 0 0 0;
#X restore 201 351 pd load-soundfile;
#X obj 38 171 r stutter.messages;
#X obj 38 196 lyonpotpourri/stutter~ sound1 500 1000 30;
#X obj 38 256 lpp-meters;
#X obj 26 22 lpp-icon stutter~;
#X text 291 396 <= open this for more info;
#X text 243 58 - stuttering playback from an array;
#X text 31 126 [stutter~] is a sample stutterer and precursor to [chopper~]
just different enough to perhaps remain worthwhile., f 61;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 5 0 6 1;
