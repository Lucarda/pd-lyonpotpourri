#N canvas 678 331 641 539 12;
#X obj 43 199 noise~;
#N canvas 532 235 601 529 fft-hipass 0;
#X obj 86 50 inlet~;
#X obj 225 472 outlet~;
#X obj 225 136 rfft~, f 6;
#X obj 225 376 rifft~;
#X obj 225 406 *~ 0;
#X obj 441 302 *;
#X msg 393 224 1 1024 8;
#X obj 393 255 unpack f f f;
#X obj 393 334 /;
#X floatatom 393 366 12 0 0 0 - - -;
#X text 474 367 rescale factor;
#X obj 393 193 loadbang;
#X obj 210 314 *~;
#X obj 170 51 inlet;
#X obj 79 484 block~ 1024 8;
#X obj 225 97 lyonpotpourri/windowvec~;
#X obj 225 171 lyonpotpourri/cartopol~;
#X obj 225 346 lyonpotpourri/poltocar~;
#X obj 225 439 lyonpotpourri/windowvec~;
#X obj 38 147 lyonpotpourri/vecdex~;
#X obj 83 285 expr~ $v1 > $f2;
#X obj 103 185 loadbang;
#X msg 103 211 20;
#X text 165 24 only pass through bin magnitudes for bin numbers greater
than right operand of the [expr~] comparison;
#X connect 0 0 15 0;
#X connect 2 0 16 0;
#X connect 2 1 16 1;
#X connect 3 0 4 0;
#X connect 4 0 18 0;
#X connect 5 0 8 1;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 7 1 5 0;
#X connect 7 2 5 1;
#X connect 8 0 9 0;
#X connect 9 0 4 1;
#X connect 11 0 6 0;
#X connect 12 0 17 0;
#X connect 13 0 20 1;
#X connect 15 0 2 0;
#X connect 16 0 12 1;
#X connect 16 1 17 1;
#X connect 17 0 3 0;
#X connect 17 1 3 1;
#X connect 18 0 1 0;
#X connect 19 0 20 0;
#X connect 20 0 12 0;
#X connect 21 0 22 0;
#X connect 22 0 20 1;
#X restore 43 238 pd fft-hipass;
#X obj 134 149 hsl 128 15 0 100 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X floatatom 131 202 5 0 0 0 - - -;
#X obj 43 318 lpp-meters;
#X text 149 237 <= open to see workings of this hipass filter;
#X obj 31 13 lpp-icon vecdex~;
#X text 240 46 - ramp through indices of a signal vector;
#X text 35 103 outputs the current index within a signal vector. It
can be useful for spectral processing \, as demonstrated here., f
64;
#X obj 131 174 expr rint($f1);
#X text 266 147 set rollup bin for hipass filter;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 1 0 4 1;
#X connect 2 0 9 0;
#X connect 3 0 1 1;
#X connect 9 0 3 0;
